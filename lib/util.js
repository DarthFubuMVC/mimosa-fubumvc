"use strict";
var log, logger, path, printObj, relativeToThisFile, _;

logger = require('logmimosa');

path = require('path');

_ = require('lodash');

log = function(level, statement) {
  return logger[level]("fubumvc: " + statement);
};

relativeToThisFile = function(filePath, dirname) {
  if (dirname == null) {
    dirname = __dirname;
  }
  return path.join(dirname, filePath);
};

printObj = function(obj, prefix) {
  var withPrefix;
  withPrefix = function(x) {
    if (prefix != null) {
      return "" + prefix + "." + x;
    } else {
      return x;
    }
  };
  return _.each(obj, function(v, k) {
    if (_.isObject(v)) {
      return printObj(v, withPrefix(k));
    } else {
      return console.log("" + (withPrefix(k)) + ": " + v);
    }
  });
};

module.exports = {
  log: log,
  relativeToThisFile: relativeToThisFile,
  printObj: printObj
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYzpcXGhvbWVcXGdpdGh1YlxcZGVsZXRlTWVcXG1pbW9zYS1mdWJ1bXZjXFxsaWJcXHV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjOlxcaG9tZVxcZ2l0aHViXFxkZWxldGVNZVxcbWltb3NhLWZ1YnVtdmNcXHNyY1xcdXRpbC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBQSxDQUFBO0FBQUEsSUFBQSxrREFBQTs7QUFBQSxNQUNBLEdBQVMsT0FBQSxDQUFRLFdBQVIsQ0FEVCxDQUFBOztBQUFBLElBRUEsR0FBTyxPQUFBLENBQVEsTUFBUixDQUZQLENBQUE7O0FBQUEsQ0FHQSxHQUFJLE9BQUEsQ0FBUSxRQUFSLENBSEosQ0FBQTs7QUFBQSxHQUtBLEdBQU0sU0FBQyxLQUFELEVBQVEsU0FBUixHQUFBO1NBQ0osTUFBTyxDQUFBLEtBQUEsQ0FBUCxDQUFlLFdBQUEsR0FBVSxTQUF6QixFQURJO0FBQUEsQ0FMTixDQUFBOztBQUFBLGtCQVFBLEdBQXFCLFNBQUMsUUFBRCxFQUFXLE9BQVgsR0FBQTs7SUFDbkIsVUFBVztHQUFYO1NBQ0EsSUFBSSxDQUFDLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFFBQW5CLEVBRm1CO0FBQUEsQ0FSckIsQ0FBQTs7QUFBQSxRQVlBLEdBQVcsU0FBQyxHQUFELEVBQU0sTUFBTixHQUFBO0FBQ1QsTUFBQSxVQUFBO0FBQUEsRUFBQSxVQUFBLEdBQWEsU0FBQyxDQUFELEdBQUE7QUFBTyxJQUFBLElBQUcsY0FBSDthQUFnQixFQUFBLEdBQUUsTUFBRixHQUFVLEdBQVYsR0FBWSxFQUE1QjtLQUFBLE1BQUE7YUFBc0MsRUFBdEM7S0FBUDtFQUFBLENBQWIsQ0FBQTtTQUNBLENBQUMsQ0FBQyxJQUFGLENBQU8sR0FBUCxFQUFZLFNBQUMsQ0FBRCxFQUFHLENBQUgsR0FBQTtBQUNWLElBQUEsSUFBSSxDQUFDLENBQUMsUUFBRixDQUFXLENBQVgsQ0FBSjthQUNFLFFBQUEsQ0FBUyxDQUFULEVBQVksVUFBQSxDQUFXLENBQVgsQ0FBWixFQURGO0tBQUEsTUFBQTthQUdFLE9BQU8sQ0FBQyxHQUFSLENBQVksRUFBQSxHQUFFLENBQUEsVUFBQSxDQUFXLENBQVgsQ0FBQSxDQUFGLEdBQWdCLElBQWhCLEdBQW1CLENBQS9CLEVBSEY7S0FEVTtFQUFBLENBQVosRUFGUztBQUFBLENBWlgsQ0FBQTs7QUFBQSxNQW9CTSxDQUFDLE9BQVAsR0FBaUI7QUFBQSxFQUFDLEtBQUEsR0FBRDtBQUFBLEVBQU0sb0JBQUEsa0JBQU47QUFBQSxFQUEwQixVQUFBLFFBQTFCO0NBcEJqQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcclxubG9nZ2VyID0gcmVxdWlyZSAnbG9nbWltb3NhJ1xyXG5wYXRoID0gcmVxdWlyZSAncGF0aCdcclxuXyA9IHJlcXVpcmUgJ2xvZGFzaCdcclxuXHJcbmxvZyA9IChsZXZlbCwgc3RhdGVtZW50KSAtPlxyXG4gIGxvZ2dlcltsZXZlbF0gXCJmdWJ1bXZjOiAje3N0YXRlbWVudH1cIlxyXG5cclxucmVsYXRpdmVUb1RoaXNGaWxlID0gKGZpbGVQYXRoLCBkaXJuYW1lKSAtPlxyXG4gIGRpcm5hbWUgPz0gX19kaXJuYW1lXHJcbiAgcGF0aC5qb2luIGRpcm5hbWUsIGZpbGVQYXRoXHJcblxyXG5wcmludE9iaiA9IChvYmosIHByZWZpeCkgLT5cclxuICB3aXRoUHJlZml4ID0gKHgpIC0+IGlmIHByZWZpeD8gdGhlbiBcIiN7cHJlZml4fS4je3h9XCIgZWxzZSB4XHJcbiAgXy5lYWNoIG9iaiwgKHYsaykgLT5cclxuICAgIGlmIChfLmlzT2JqZWN0IHYpXHJcbiAgICAgIHByaW50T2JqKHYsIHdpdGhQcmVmaXggaylcclxuICAgIGVsc2VcclxuICAgICAgY29uc29sZS5sb2cgXCIje3dpdGhQcmVmaXgga306ICN7dn1cIlxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7bG9nLCByZWxhdGl2ZVRvVGhpc0ZpbGUsIHByaW50T2JqfVxyXG4iXX0=
